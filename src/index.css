.main-enter-active {
	transition: transform 300ms cubic-bezier(0.22, 1, 0.36, 1),
		opacity 300ms cubic-bezier(0.22, 1, 0.36, 1);
}

.main-enter-from {
	opacity: 0;
	transform: scale(0.5) translate3d(0, -100px, 0);
}

.main-leave-active {
	transition: opacity 300ms ease;
}

.main-leave-to {
	opacity: 0;
}

.VueNotify__root {
	display: flex;
	position: fixed;
	justify-content: center;
	align-items: center;
	width: 100vw;
	top: 0;
	left: 0;
}

.VueNotify__container {
}

.Toast {
	background: #68ff004a;
	margin: 10px;
	padding: 10px;
	width: 300px;
	border-radius: 10px;
	display: grid;
	grid-template-columns: auto 1fr auto;
	border: 1px solid #75ff77;
	box-shadow: 0 0 3px #67ff0052;
	gap: 10px;
	justify-items: center;
	align-items: center;
}

[data-vuenotify='error'] {
	background: #ff00004a;
	border: 1px solid #ff0000;
	box-shadow: 0 0 3px #ff000052;
}

[data-vuenotify='promise'] {
	background: #ffff004a;
	border: 1px solid #ffff00;
	box-shadow: 0 0 3px #ffff0052;
}

.Toast__icon svg {
	opacity: 0.75;
	display: flex;
}

.Toast__right {
	border-left: 1px solid #ffffff26;
}

.Toast__message {
	text-align: left;
	margin: 0;
	padding: 0;
	font-weight: 600;
	font-size: 0.925rem;
	line-height: 1.33em;
}

.Toast__button {
	border: none;
	background: none;
	padding: 10px;
	margin: 0;
	opacity: 0.5;
	margin-right: -10px;
}

.Toast__button svg {
	display: flex;
}

.Toast__button:hover {
	border: none;
	background: none;
	opacity: 1;
}

.list-move,
.list-enter-active {
	transition: transform var(--VueNotifyTxDuration) cubic-bezier(0.22, 1, 0.36, 1),
		opacity var(--VueNotifyTxDuration) cubic-bezier(0.22, 1, 0.36, 1);
}

.list-leave-active {
	position: absolute;
	transition: transform var(--VueNotifyDxDuration) cubic-bezier(0.22, 1, 0.36, 1),
		opacity var(--VueNotifyDxDuration) cubic-bezier(0.22, 1, 0.36, 1);
}

.list-enter-from,
.list-leave-to {
	opacity: 0;
	transform: scale(0.75) translate3d(0, -100px, 0);
}

.VueNotify_Spinner {
	transform-origin: center;
	animation: VueNotify_SpinnerOut 2s linear infinite;
}

.VueNotify_Spinner circle {
	stroke-linecap: round;
	animation: VueNotify_SpinnerIn 1.5s ease-in-out infinite;
}

@keyframes VueNotify_SpinnerOut {
	100% {
		transform: rotate(360deg);
	}
}

@keyframes VueNotify_SpinnerIn {
	0% {
		stroke-dasharray: 0 150;
		stroke-dashoffset: 0;
	}
	47.5% {
		stroke-dasharray: 42 150;
		stroke-dashoffset: -16;
	}
	95%,
	100% {
		stroke-dasharray: 42 150;
		stroke-dashoffset: -59;
	}
}
